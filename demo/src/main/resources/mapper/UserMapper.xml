<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <!-- resultMap：resultMap的id ，bookName：resultMap的property，即实体类中的属性 -->
    <resultMap type="Book.dao.Book" id="BookResultMap">
        <id column="id" property="id"/>
        <result column="userName" property="userName"/>
        <result column="introduction" property="introduction"/>
        <result column="sex" property="sex"/>
        <result column="age" property="age"/>
        </resultMap>
    <!--
        查询全部
    -->
    <select id="getUsers" resultType="com.example.demo.domain.User">
        select * from user
    </select>
    <!--
        根据id查询
    -->
    <select id="getUserById" parameterType="Integer" resultType="com.example.demo.domain.User">
        select * from user where id =#{id}
    </select>
    <!--
        根据name模糊查询
    -->
    <select id="getUser" parameterType="String" resultType="com.example.demo.domain.User">
        select <include refid="columns"/> from user
        <if test="keyword != null and keyword != ''">
            userName like "%"#{keyword}"%"
        </if>
    </select>
    <!--
        根据id删除用户信息
    -->
    <delete id="delUser" parameterType="Integer">
        delete from user where id =#{id}
    </delete>
    <!--
        插入用户信息
    -->
    <insert id="addUser" parameterType="com.example.demo.domain.User">
        insert into user(id,userName,introduction,sex,age)values(#{id},#{username},#{introduction},#{sex},#{age})
    </insert>
    <!--
        根据id修改用户信息
    -->
    <update id="updateUser" parameterType="Integer">
        update user
            set
            userName=#{userName},
            introduction=#{introduction},
            sex=#{sex},
            age=#{age}
        WHERE id=#{id}
    </update>
</mapper>